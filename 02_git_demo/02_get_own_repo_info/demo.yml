name: Context demo -- github

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    # push时，只有提交信息包含 [deploy] 或 [update] 标签时触发
    if: |
        github.event_name == 'push' && (
        contains(github.event.head_commit.message, '[deploy]') || contains(github.event.head_commit.message, '[update]')
        )
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: set time
        run: |
          TIME="$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')"
          echo "TIME=$TIME" >> $GITHUB_ENV

      # Prints the current time in Shanghai timezone
      - name: print time
        run: echo "Current time in Shanghai ${{ env.TIME }}"
        
      # Prints the current time in UTC
      - name: print utc time
        run: echo "Current UTC time $(date -u +'%Y-%m-%d %H:%M:%S')"
      
      # clone the target repository 若是私有仓库，则需要个人令牌
      - name: Clone target repository
        run: |
          git clone --depth=2 https://$GH_TOKEN@github.com/JamesIves/github-pages-deploy-action.git target-repo
      
      - name: Extract commit info
        id: extract_commit_info
        run: |
          cd target-repo
          echo "REPO_NAME=$(git config --get remote.origin.url | sed -n 's#.*github.com/\(.*\)\.git#\1#p')" >> $GITHUB_OUTPUT
          echo "COMMIT_ID=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=%B | head -n1)" >> $GITHUB_OUTPUT

      - name: Print commit info
        run: |
          echo "other Repository Name: ${{ steps.extract_commit_info.outputs.REPO_NAME }}"
          echo "other Commit ID: ${{ steps.extract_commit_info.outputs.COMMIT_ID }}"
          echo "other Commit Message: ${{ steps.extract_commit_info.outputs.COMMIT_MESSAGE }}"

      - name: Get own repository info
        run: |
          echo "own Repository Name: ${{ github.repository }}"
          echo "own Commit ID: ${{ github.sha }}"
          echo "own Commit Message: ${{ github.event.head_commit.message }}"

      - name: own & other
        run: |
          echo "${{ github.repository }}@${{ github.sha }} && ${{ steps.extract_commit_info.outputs.REPO_NAME }}@${{ steps.extract_commit_info.outputs.COMMIT_ID }} 🚀"
